
#Область ПрограммныйИнтерфейс_Алгоритмы

Процедура ВыполнитьРегламентнуюПроцедуру(Алгоритм) Экспорт
    ВыполнитьПроцедуру(Алгоритм);
КонецПроцедуры

Процедура ВыполнитьПроцедуру(ПредставлениеАлгоритма,ДополнительныеПараметры = Неопределено) Экспорт
    Алгоритм = ПолучитьСсылкуСправочникАлгоритмы(ПредставлениеАлгоритма);
    Если Алгоритм = Неопределено Или Алгоритм.Пустая() Тогда
        СообщениеОбОшибке = "_37583_АлгоритмыСервер : Ошибка выполнения процедуры(не определен сценарий " + Алгоритм + " )";
        Если ДополнительныеПараметры = Неопределено Тогда 
            ДополнительныеПараметры = Новый Структура;
        КонецЕсли;
        ДополнительныеПараметры.Вставить("Отказ",Истина);
        ДополнительныеПараметры.Вставить("СообщениеОбОшибке",СообщениеОбОшибке);
        ЗаписатьВЖурналРегистрации(,СообщениеОбОшибке);
        Возврат;
    КонецЕсли;
    Объект = Алгоритм.ПолучитьОбъект();
    Объект.ВыполнитьПроцедуру(ДополнительныеПараметры);
КонецПроцедуры

Функция ВыполнитьФункцию(ПредставлениеАлгоритма,ДополнительныеПараметры = Неопределено) Экспорт
    Алгоритм = ПолучитьСсылкуСправочникАлгоритмы(ПредставлениеАлгоритма);
    Если Алгоритм = Неопределено Или Алгоритм.Пустая() Тогда
        СообщениеОбОшибке = "_37583_АлгоритмыСервер : Ошибка выполнения функции(не определен сценарий " + Алгоритм + " )";
        Если ДополнительныеПараметры = Неопределено Тогда 
            ДополнительныеПараметры = Новый Структура;
        КонецЕсли;
        ДополнительныеПараметры.Вставить("Отказ",Истина);
        ДополнительныеПараметры.Вставить("СообщениеОбОшибке",СообщениеОбОшибке);
        ЗаписатьВЖурналРегистрации(,СообщениеОбОшибке);
        Возврат Новый Соответствие;
    КонецЕсли;
    Если Алгоритм.Кэшировать Тогда
        Возврат _37583_АлгоритмыКэш.ВыполнитьФункцию(Алгоритм,ДополнительныеПараметры);
    КонецЕсли;
    
    Объект = Алгоритм.ПолучитьОбъект();
    Возврат Объект.ВыполнитьФункцию(ДополнительныеПараметры);
КонецФункции


#КонецОбласти

#Область ПрограммныйИнтерфейс_ОбщегоНазначения

Процедура ЗаписатьВЖурналРегистрации(ИмяСобытия = "_37583_",Комментарий = "",СсылкаНаОбъект = Неопределено,ТипСообщения = "Ошибка") Экспорт 
    Уровень = ?(ТипСообщения = "Ошибка",УровеньЖурналаРегистрации.Ошибка,УровеньЖурналаРегистрации.Предупреждение);
    Если СсылкаНаОбъект = Неопределено Тогда
        ЗаписьЖурналаРегистрации(ИмяСобытия,Уровень,,,Комментарий);	
    Иначе 
        ЗаписьЖурналаРегистрации(ИмяСобытия,Уровень,,СсылкаНаОбъект,Комментарий);	
    КонецЕсли;	
КонецПроцедуры

Функция МассивСтрокВСтроку(Массив,Разделитель="") Экспорт
    Если Массив.Количество()>0 Тогда
        Возврат ЗначениеИзСтрокиВнутр(СтрПолучитьСтроку(Стрзаменить(ЗначениеВСтрокуВнутр(Массив),"""},"+Символы.ПС+"{""S"",""",""+Разделитель+""),3));
    Иначе 
        Возврат "";
    КонецЕсли;	
КонецФункции 

Функция СтрокаВМассив(Строка,Разделитель) Экспорт
    Возврат ЗначениеИзСтрокиВнутр("{""#"",51e7a0d2-530b-11d4-b98a-008048da3034,{0,{""S"",""" + СтрЗаменить(СтрЗаменить(Строка, """", """"""), Разделитель, """},{""S"",""") + """}}}");
КонецФункции 

Функция ТзВМассивСтруктур(тз) Экспорт 
    Массив = Новый Массив;
	Для каждого Строка Из тз Цикл
		Структура = Новый  Структура;
		Для Каждого Колонка Из тз.Колонки Цикл
			Структура.Вставить(Колонка.Имя,Строка[Колонка.Имя]);
		КонецЦикла;
        Массив.Добавить(Структура);
    КонецЦикла;
    Возврат Массив;
КонецФункции

Функция ТзВСтруктуруМассивов(тз) Экспорт 
	Структура = Новый  Структура;
	Для Каждого Колонка Из тз.Колонки Цикл
		Массив = Новый Массив;
		Для Каждого Строка Из тз Цикл
			Массив.Добавить(Строка[Колонка.Имя]);
		КонецЦикла;
		Структура.Вставить(Колонка.Имя,Массив);
	КонецЦикла;
	Возврат Структура;
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьСсылкуСправочникАлгоритмы(Алгоритм) Экспорт
    Если ТипЗнч(Алгоритм) = Тип("СправочникСсылка._37583_ALG") Тогда 
        Возврат Алгоритм;
    ИначеЕсли ТипЗнч(Алгоритм) = Тип("УникальныйИдентификатор") Тогда
        Возврат Справочники._37583_ALG.ПолучитьСсылку(Алгоритм);
    ИначеЕсли ТипЗнч(Алгоритм) = Тип("Строка") Тогда 
        Если Лев(Алгоритм,5) = "GUID_" Тогда // БСП внеш. обработка
            СтрокаУИД = Сред(Алгоритм,6);
            ref = Справочники._37583_ALG.ПолучитьСсылку(Новый УникальныйИдентификатор(СтрокаУИД));
            Возврат ?(ПустаяСтрока(ref.Наименование),Неопределено,ref);
        КонецЕсли;
        НайденПоНаименованию = Справочники._37583_ALG.НайтиПоНаименованию(Алгоритм,Истина);
        Если НайденПоНаименованию = Неопределено Тогда
            Попытка
                ЧислоКод = Число(Прав(Алгоритм,5));
                НайденПоКоду = Справочники._37583_ALG.НайтиПоКоду(ЧислоКод);
                Если НайденПоКоду = Неопределено Тогда
                    Возврат Неопределено;
                Иначе 
                    Возврат НайденПоКоду;
                КонецЕсли;	
            Исключение
                Возврат Неопределено;
            КонецПопытки;
        Иначе 
            Возврат НайденПоНаименованию;	
        КонецЕсли;	
    Иначе
        Возврат Неопределено;
    КонецЕсли;
КонецФункции

Функция ПолучитьКодАлгоритма(ПредставлениеАлгоритма) Экспорт
    Алгоритм = ПолучитьСсылкуСправочникАлгоритмы(ПредставлениеАлгоритма);
    Если Алгоритм = Неопределено Или Алгоритм.Пустая() Тогда
        Сообщение = "Алгоритмы : Ошибка получения Текста(не определен сценарий " + Алгоритм + " )";
        ЗаписатьВЖурналРегистрации(,Сообщение);
        Возврат "";
    Иначе
        Возврат Алгоритм.КодАлгоритма;
    КонецЕсли;
КонецФункции

Функция ПолучитьПараметр(ПредставлениеАлгоритма,НаименованиеПараметра) Экспорт
    Алгоритм = ПолучитьСсылкуСправочникАлгоритмы(ПредставлениеАлгоритма);
    Если Алгоритм = Неопределено Или Алгоритм.Пустая() Тогда
        СообщениеОбОшибке = "Алгоритмы : Ошибка получения параметров(не определен сценарий " + Алгоритм + " )";
        ЗаписатьВЖурналРегистрации(,СообщениеОбОшибке);
        Возврат Новый Структура("Отказ,СообщениеОбОшибке",Истина,СообщениеОбОшибке);
    ИначеЕсли ПустаяСтрока(НаименованиеПараметра) Тогда 
        СообщениеОбОшибке = "Алгоритмы : Не определен параметр " + Алгоритм + " )";
        ЗаписатьВЖурналРегистрации(,СообщениеОбОшибке);
        Возврат Новый Структура("Отказ,СообщениеОбОшибке",Истина,СообщениеОбОшибке);
    Иначе
        Объект = Алгоритм.ПолучитьОбъект();
        Параметр = Объект.ПолучитьПараметр(НаименованиеПараметра);
        Если Параметр = Неопределено Тогда
            СообщениеОбОшибке = "Алгоритмы : Не найден параметр " + НаименованиеПараметра + " )";
            ЗаписатьВЖурналРегистрации(,СообщениеОбОшибке);
            Возврат Новый Структура("Отказ,СообщениеОбОшибке",Истина,СообщениеОбОшибке);
        Иначе 
            СтруктураВозврат = Новый Структура;
            СтруктураВозврат.Вставить(НаименованиеПараметра,Параметр);
            СтруктураВозврат.Вставить("Отказ",Ложь);
            Возврат СтруктураВозврат;
        КонецЕсли;	
    КонецЕсли;
КонецФункции

Функция ПолучитьПараметры(ПредставлениеАлгоритма,НаКлиенте = Ложь) Экспорт
    Алгоритм = ПолучитьСсылкуСправочникАлгоритмы(ПредставлениеАлгоритма);
    Если Алгоритм = Неопределено Или Алгоритм.Пустая() Тогда
        СообщениеОбОшибке = "Алгоритмы : Ошибка получения параметров(не определен сценарий " + Алгоритм + " )";
        ЗаписатьВЖурналРегистрации(,СообщениеОбОшибке);
        Возврат Новый Структура("Отказ,СообщениеОбОшибке",Истина,СообщениеОбОшибке);
    Иначе
        Объект = Алгоритм.ПолучитьОбъект();
        Параметры = Объект.ПолучитьПараметры();
        Параметры.Вставить("Отказ",Ложь);
        Если НаКлиенте Тогда
            Для Каждого Параметр Из Параметры Цикл
                Если ТипЗнч(Параметр.Значение) = Тип("ТаблицаЗначений") Тогда 
                    Параметры.Вставить(Параметр.Ключ,_37583_АлгоритмыСервер.ТзВМассивСтруктур(Параметр.Значение));
                КонецЕсли;
            КонецЦикла;
            Возврат ПоместитьВоВременноеХранилище(Параметры,Новый УникальныйИдентификатор);	
        Иначе
            Возврат Параметры;	
        КонецЕсли;		
    КонецЕсли;
КонецФункции

Процедура ПолучитьСвойстваАлгоритма(ПредставлениеАлгоритма,СвойстваАлгоритма) Экспорт
    Алгоритм = ПолучитьСсылкуСправочникАлгоритмы(ПредставлениеАлгоритма);
    Если Алгоритм = Неопределено Или Алгоритм.Пустая() Тогда
        СообщениеОбОшибке = "Алгоритмы : Ошибка получения параметров (не определен сценарий " + Алгоритм + " )";
        ЗаписатьВЖурналРегистрации(,СообщениеОбОшибке);
        СвойстваАлгоритма =  Новый Структура("Отказ,СообщениеОбОшибке",Истина,СообщениеОбОшибке);
    ИначеЕсли  ТипЗнч(СвойстваАлгоритма) <> Тип("Структура") Тогда        
        СообщениеОбОшибке = "Алгоритмы : Передано неправильное значение параметра СвойстваАлгоритма";
        ЗаписатьВЖурналРегистрации(,СообщениеОбОшибке);
        СвойстваАлгоритма =  Новый Структура("Отказ,СообщениеОбОшибке",Истина,СообщениеОбОшибке);
    Иначе 
        Объект = Алгоритм.ПолучитьОбъект();
        ЗаполнитьЗначенияСвойств(СвойстваАлгоритма, Объект);
        СвойстваАлгоритма.Вставить("Отказ",Ложь);
    КонецЕсли;
КонецПроцедуры

#КонецОбласти

