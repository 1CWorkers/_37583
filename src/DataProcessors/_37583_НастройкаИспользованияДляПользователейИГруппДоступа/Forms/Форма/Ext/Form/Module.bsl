
&НаСервере
Процедура ОбновитьПользователиНаСервере()
	ТаблицаПользователиИБ = ТаблицаПользователей.Выгрузить(Новый Массив);
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|   Пользователи.Наименование КАК Пользователь,
	|   Пользователи.ИдентификаторПользователяИБ КАК ПользовательGUID
	|ИЗ
	|   Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|   Пользователи.ПометкаУдаления = ЛОЖЬ
	|   И Пользователи.Недействителен = ЛОЖЬ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НС = ТаблицаПользователиИБ.Добавить();
		ЗаполнитьЗначенияСвойств(НС, ВыборкаДетальныеЗаписи);
		ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ВыборкаДетальныеЗаписи.ПользовательGUID);
		Если Не ПользовательИБ = Неопределено Тогда 
			НС.Чтение = ПользовательИБ.Роли.Содержит(Метаданные.Роли._37583_ИспользованиеАлгоритмов);
			НС.Редактирование = ПользовательИБ.Роли.Содержит(Метаданные.Роли._37583_РедактированиеАлгоритмов);
		КонецЕсли;
		
	КонецЦикла;
	ЗначениеВДанныеФормы(ТаблицаПользователиИБ, ТаблицаПользователей);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПользователи(Команда)
	ОбновитьПользователиНаСервере();
КонецПроцедуры

&НаСервере
Процедура УстановитьПользователиНаСервере()
	ТекстСообщения = "";
	ТаблицаПользователиИБ = ТаблицаПользователей.Выгрузить();
	
	Для  Каждого СтрТаб из ТаблицаПользователиИБ Цикл
		
		ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(СтрТаб.ПользовательGUID);
		Если  ПользовательИБ  = Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		Записывать = Ложь;
		// Редактирование
		Если  ПользовательИБ.Роли.Содержит(Метаданные.Роли._37583_РедактированиеАлгоритмов) И НЕ СтрТаб.Редактирование Тогда 
			ПользовательИБ.Роли.Удалить(Метаданные.Роли._37583_РедактированиеАлгоритмов);
			ТекстСообщения = ТекстСообщения + " удалена роль  РедактированиеАлгоритмов для пользователя "+СтрТаб.Пользователь+ Символы.ПС;
			Записывать = Истина;
		ИначеЕсли СтрТаб.Редактирование  И Не ПользовательИБ.Роли.Содержит(Метаданные.Роли._37583_РедактированиеАлгоритмов) Тогда
			ПользовательИБ.Роли.Добавить(Метаданные.Роли._37583_РедактированиеАлгоритмов);
			ТекстСообщения = ТекстСообщения + " установлена роль  РедактированиеАлгоритмов для пользователя "+СтрТаб.Пользователь+ Символы.ПС;
			Записывать = Истина;
		КонецЕсли;
		
		// Чтение
		Если  ПользовательИБ.Роли.Содержит(Метаданные.Роли._37583_ИспользованиеАлгоритмов) И НЕ СтрТаб.Чтение Тогда 
			ПользовательИБ.Роли.Удалить(Метаданные.Роли._37583_ИспользованиеАлгоритмов);
			ТекстСообщения = ТекстСообщения + " удалена роль  ИспользованиеАлгоритмов для пользователя "+СтрТаб.Пользователь+ Символы.ПС;
			Записывать = Истина;
		ИначеЕсли СтрТаб.Чтение  И Не ПользовательИБ.Роли.Содержит(Метаданные.Роли._37583_ИспользованиеАлгоритмов) Тогда
			ПользовательИБ.Роли.Добавить(Метаданные.Роли._37583_ИспользованиеАлгоритмов);
			ТекстСообщения = ТекстСообщения + " установлена роль  ИспользованиеАлгоритмов для пользователя "+СтрТаб.Пользователь+ Символы.ПС;
			Записывать = Истина;
		КонецЕсли;
		
		Если Записывать Тогда
			ПользовательИБ.Записать();
		КонецЕсли;
			
	КонецЦикла;
	
	
	Если Не ПустаяСтрока(ТекстСообщения) Тогда 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Сообщить(); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПользователи(Команда)
	УстановитьПользователиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьПрофилиНаСервере()
	
	ИдентификаторыРолей = ПолучитьИдентификаторыРолей();
	Если ИдентификаторыРолей = Неопределено Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не найдены идентификаторы объектов расширения";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ТаблицаПрофилей = ТаблицаПрофилейДоступаБСП.Выгрузить(Новый Массив);
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	ПрофилиГруппДоступа.Ссылка КАК Ссылка,
	|	ПрофилиГруппДоступа.Наименование КАК Профиль
	|ИЗ
	|	Справочник.ПрофилиГруппДоступа КАК ПрофилиГруппДоступа
	|ГДЕ
	|	ПрофилиГруппДоступа.ПометкаУдаления = ЛОЖЬ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НС = ТаблицаПрофилей.Добавить();
		ЗаполнитьЗначенияСвойств(НС, ВыборкаДетальныеЗаписи);
		НС.ПрофильGUID = ВыборкаДетальныеЗаписи.Ссылка.УникальныйИдентификатор();
		ПрофильДоступа = ВыборкаДетальныеЗаписи.Ссылка;
		НС.Чтение = Не ПрофильДоступа.Роли.Найти(ИдентификаторыРолей.ИспользованиеАлгоритмов,"Роль")= Неопределено ;
		НС.Редактирование = Не ПрофильДоступа.Роли.Найти(ИдентификаторыРолей.РедактированиеАлгоритмов,"Роль")= Неопределено;
	КонецЦикла;
	ЗначениеВДанныеФормы(ТаблицаПрофилей, ТаблицаПрофилейДоступаБСП)
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИдентификаторыРолей()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИдентификаторыОбъектовРасширений.Ссылка КАК Ссылка,
	|	ИдентификаторыОбъектовРасширений.Имя КАК Имя
	|ИЗ
	|	Справочник.ИдентификаторыОбъектовРасширений КАК ИдентификаторыОбъектовРасширений
	|ГДЕ
	|	ИдентификаторыОбъектовРасширений.ПометкаУдаления = ЛОЖЬ
	|	И ИдентификаторыОбъектовРасширений.Наименование ПОДОБНО ""%_37583%"""
	;
	Выборка = Запрос.Выполнить().Выбрать();
	ИдентификаторыРолей = Новый Структура;
	Пока Выборка.СледующийПоЗначениюПоля("Имя") Цикл
		Если Выборка.Имя = "_37583_ИспользованиеАлгоритмов" Тогда
			ИдентификаторыРолей.Вставить("ИспользованиеАлгоритмов",Выборка.Ссылка);
		ИначеЕсли Выборка.Имя = "_37583_РедактированиеАлгоритмов" Тогда
			ИдентификаторыРолей.Вставить("РедактированиеАлгоритмов",Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	Возврат ?(ИдентификаторыРолей.Количество()=2,ИдентификаторыРолей,Неопределено);
КонецФункции // ПолучитьИдентификаторОбъектаРасширения()

&НаКлиенте
Процедура ОбновитьПрофили(Команда)
	ОбновитьПрофилиНаСервере();
КонецПроцедуры

&НаСервере
Процедура УстановитьПрофилиНаСервере()
	
	ИдентификаторыРолей = ПолучитьИдентификаторыРолей();
	Если ИдентификаторыРолей = Неопределено Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не найдены идентификаторы объектов расширения";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ТекстСообщения = "";
	ТаблицаПрофилей = ТаблицаПрофилейДоступаБСП.Выгрузить();
	
	Для  Каждого СтрТаб из ТаблицаПрофилей Цикл
		ПрофильСсылка = Справочники.ПрофилиГруппДоступа.ПолучитьСсылку(СтрТаб.ПрофильGUID);
		Если  ПрофильСсылка.Пустая()  Тогда 
			Продолжить;
		КонецЕсли;
		ПрофильОбъект = ПрофильСсылка.ПолучитьОбъект();
		Записывать = Ложь;
		
		// Редактирование
		НайденоРедактирование = ПрофильОбъект.Роли.НайтиСтроки(Новый Структура("Роль",ИдентификаторыРолей.РедактированиеАлгоритмов));
		Если  НайденоРедактирование.Количество() > 0 И НЕ СтрТаб.Редактирование Тогда 
			ПрофильОбъект.Роли.Удалить(НайденоРедактирование[0]);
			ТекстСообщения = ТекстСообщения + " удалена роль  РедактированиеАлгоритмов для профиля "+ПрофильСсылка+ Символы.ПС;
			Записывать = Истина;
		ИначеЕсли СтрТаб.Редактирование  И  НайденоРедактирование.Количество() = 0 Тогда
			НоваяСтрока = ПрофильОбъект.Роли.Добавить();
			НоваяСтрока.Роль = ИдентификаторыРолей.РедактированиеАлгоритмов;
			ТекстСообщения = ТекстСообщения + " установлена роль  РедактированиеАлгоритмов для профиля "+ПрофильСсылка+ Символы.ПС;
			Записывать = Истина;
		КонецЕсли;
		
		// Чтение
		НайденоЧтение = ПрофильОбъект.Роли.НайтиСтроки(Новый Структура("Роль",ИдентификаторыРолей.ИспользованиеАлгоритмов));
		Если  НайденоЧтение.Количество() > 0 И НЕ СтрТаб.Чтение Тогда 
			ПрофильОбъект.Роли.Удалить(НайденоЧтение[0]);
			Записывать = Истина;
			ТекстСообщения = ТекстСообщения + " удалена роль  ИспользованиеАлгоритмов для профиля "+ПрофильСсылка+ Символы.ПС;
		ИначеЕсли СтрТаб.Чтение  И  НайденоЧтение.Количество() = 0 Тогда
			НоваяСтрока = ПрофильОбъект.Роли.Добавить();
			НоваяСтрока.Роль = ИдентификаторыРолей.ИспользованиеАлгоритмов;
			ТекстСообщения = ТекстСообщения + " установлена роль  ИспользованиеАлгоритмов для профиля "+ПрофильСсылка+ Символы.ПС;
			Записывать = Истина;
		КонецЕсли;
		
		Если Записывать Тогда
			ПрофильОбъект.Записать();
		КонецЕсли;
		
	КонецЦикла;	
	
	Если Не ПустаяСтрока(ТекстСообщения) Тогда 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Сообщить(); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПрофили(Команда)
	УстановитьПрофилиНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьИдентификаторыОбъектовРасширенийНаСервере()
	Справочники.ИдентификаторыОбъектовРасширений.ОбновитьДанныеСправочника();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИдентификаторыОбъектовРасширений(Команда)
	ОбновитьИдентификаторыОбъектовРасширенийНаСервере();
КонецПроцедуры
