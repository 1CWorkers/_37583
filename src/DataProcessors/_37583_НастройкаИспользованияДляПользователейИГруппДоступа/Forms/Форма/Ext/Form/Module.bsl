
&НаСервере
Процедура ОбновитьПользователиНаСервере()
    ТаблицаПользователиИБ = ТаблицаПользователей.Выгрузить(Новый Массив);
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   Пользователи.Наименование КАК Пользователь,
        |   Пользователи.ИдентификаторПользователяИБ КАК ПользовательGUID
        |ИЗ
        |   Справочник.Пользователи КАК Пользователи
        |ГДЕ
        |   Пользователи.ПометкаУдаления = ЛОЖЬ
        |   И Пользователи.Недействителен = ЛОЖЬ";
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
        НС = ТаблицаПользователиИБ.Добавить();
        ЗаполнитьЗначенияСвойств(НС, ВыборкаДетальныеЗаписи);
        ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ВыборкаДетальныеЗаписи.ПользовательGUID);
        Если Не ПользовательИБ = Неопределено Тогда 
            НС.Чтение = ПользовательИБ.Роли.Содержит(Метаданные.Роли._37583_ИспользованиеАлгоритмов);
            НС.Редактирование = ПользовательИБ.Роли.Содержит(Метаданные.Роли._37583_РедактированиеАлгоритмов);
        КонецЕсли;
        
    КонецЦикла;
     ЗначениеВДанныеФормы(ТаблицаПользователиИБ, ТаблицаПользователей);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПользователи(Команда)
    ОбновитьПользователиНаСервере();
КонецПроцедуры

&НаСервере
Процедура УстановитьПользователиНаСервере()
    ТекстСообщения = "";
    ТаблицаПользователиИБ = ТаблицаПользователей.Выгрузить();
    Для  Каждого СтрТаб из ТаблицаПользователиИБ Цикл
        Если  СтрТаб.Чтение Или СтрТаб.Редактирование Тогда 
            ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(СтрТаб.ПользовательGUID);
            Если  ПользовательИБ  <> Неопределено Тогда 
                НоваяРоль = ?(СтрТаб.Редактирование , Метаданные.Роли._37583_РедактированиеАлгоритмов , Метаданные.Роли._37583_ИспользованиеАлгоритмов ); 
                ПользовательИБ.Роли.Добавить(НоваяРоль);
                ПользовательИБ.Записать();
                ТекстСообщения = ТекстСообщения + " установлена роль " + НоваяРоль.Имя + " для пользователя "+СтрТаб.Пользователь+ Символы.ПС;
            КонецЕсли;
        КонецЕсли;
    КонецЦикла;
    Если Не ПустаяСтрока(ТекстСообщения) Тогда 
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = ТекстСообщения;
        Сообщение.Сообщить(); 
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПользователи(Команда)
    УстановитьПользователиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьПрофилиНаСервере()
    ТаблицаПрофилей = ТаблицаПрофилейДоступаБСП.Выгрузить(Новый Массив);
    Запрос = Новый Запрос;
	Запрос.Текст = 
        "ВЫБРАТЬ
		|	ПрофилиГруппДоступа.Ссылка КАК Ссылка,
        |	ПрофилиГруппДоступа.Наименование КАК Профиль,
        |	ПрофилиГруппДоступа.ИдентификаторПоставляемыхДанных КАК ПрофильGUID
        |ИЗ
        |	Справочник.ПрофилиГруппДоступа КАК ПрофилиГруппДоступа
        |ГДЕ
        |	ПрофилиГруппДоступа.ПометкаУдаления = ЛОЖЬ";
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
        НС = ТаблицаПрофилей.Добавить();
        ЗаполнитьЗначенияСвойств(НС, ВыборкаДетальныеЗаписи);
		ПрофильДоступа = ВыборкаДетальныеЗаписи.Ссылка;
        НС.Чтение = Не ПрофильДоступа.Роли.Найти(Метаданные.Роли._37583_ИспользованиеАлгоритмов,"Роль")= Неопределено ;
        НС.Редактирование = Не ПрофильДоступа.Роли.Найти(Метаданные.Роли._37583_РедактированиеАлгоритмов,"Роль")= Неопределено;
    КонецЦикла;
     ЗначениеВДанныеФормы(ТаблицаПрофилей, ТаблицаПрофилейДоступаБСП)
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПрофили(Команда)
    ОбновитьПрофилиНаСервере();
КонецПроцедуры

&НаСервере
Процедура УстановитьПрофилиНаСервере()
	//ТекстСообщения = "";
	//ТаблицаПрофилей = ТаблицаПрофилейДоступаБСП.Выгрузить();
	//Для  Каждого СтрТаб из ТаблицаПрофилей Цикл
	//	Если  СтрТаб.Чтение Или СтрТаб.Редактирование Тогда 
	//		ПрофильДоступа = Справочники.ПрофилиГруппДоступа.ПолучитьСсылку(СтрТаб.ПрофильGUID);
	//		Если  Не ПрофильДоступа.Пустая() Тогда 
	//			НоваяРоль = ?(СтрТаб.Редактирование , Метаданные.Роли._37583_РедактированиеАлгоритмов , Метаданные.Роли._37583_ИспользованиеАлгоритмов ); 
	//			ПользовательИБ.Роли.Добавить(НоваяРоль);
	//			ПользовательИБ.Записать();
	//			ТекстСообщения = ТекстСообщения + " установлена роль " + НоваяРоль.Имя + " для пользователя "+СтрТаб.Пользователь+ Символы.ПС;
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЦикла;
	//Если Не ПустаяСтрока(ТекстСообщения) Тогда 
	//	Сообщение = Новый СообщениеПользователю;
	//	Сообщение.Текст = ТекстСообщения;
	//	Сообщение.Сообщить(); 
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПрофили(Команда)
    УстановитьПрофилиНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьИдентификаторыОбъектовРасширенийНаСервере()
   Справочники.ИдентификаторыОбъектовРасширений.ОбновитьДанныеСправочника();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИдентификаторыОбъектовРасширений(Команда)
    ОбновитьИдентификаторыОбъектовРасширенийНаСервере();
КонецПроцедуры
